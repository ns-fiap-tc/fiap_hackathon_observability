# Deploya a infraestrutura de observabilidade
name: Observability Stack Deploy

on:
  push:
    branches: [main]
    paths:
      - "terraform/**"
      - "grafana/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="aws_region=us-east-1" -var="environment=prod" -var="cluster_name=hacka_cluster" -out=tfplan

      - name: Terraform Apply
        run: terraform apply tfplan -auto-approve

      - name: Verify deployment
        run: |
          echo "Verificando status dos pods..."
          kubectl get pods -n observability --kubeconfig <(aws eks update-kubeconfig --region us-east-1 --name hacka_cluster --output yaml)

          echo "Verificando serviÃ§os..."
          kubectl get services -n observability --kubeconfig <(aws eks update-kubeconfig --region us-east-1 --name hacka_cluster --output yaml)

      - name: Output deployment info
        run: |
          echo "ðŸš€ Deploy concluÃ­do com sucesso!"
          echo "ðŸ“Š Acesse os serviÃ§os:"
          echo "  - Prometheus: kubectl port-forward -n observability service/prometheus 9090:9090"
          echo "  - Grafana: kubectl port-forward -n observability service/grafana 3000:3000"
          echo "  - OTEL Collector: kubectl port-forward -n observability service/otel-collector 4318:4318"
